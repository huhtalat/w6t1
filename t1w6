using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace demov2
{
    class Program
    {
        static void TestPersonClass()
        {
            //luodaan ns henkilörekisteri
            Persons myFriends = new Persons();
            //lisätään muutama kaveri rekisteriin
            Person friend1 = new Person();
            friend1.FirstName = "Kirsi";
            friend1.LastName = "Kernell";
            friend1.SocialSecurityNumber = "121270-123A";
            //lyhyempi tapa luoda olio ominaisuuksineen
            Person friend2 = new Person { FirstName = "Jack", LastName = "Russell", SocialSecurityNumber = "141217+BBB1" };
            Person friend3 = new Person { FirstName = "Will", LastName = "Tottenheim", SocialSecurityNumber = "141217+BBB1" };
            Person friend4 = new Person { FirstName = "Teppo", LastName = "Testaaja", SocialSecurityNumber = "010101-0010" };
            //lisätään kaverit yksi kerrallaan kaveri-rekisteriin
            myFriends.Add(friend1);
            myFriends.Add(friend2);
            myFriends.Add(friend3);
            myFriends.Add(friend4);
            //näytetään rekisteri
            Console.WriteLine("**** Kaverirekisterisi ****");
            myFriends.ShowPersons();
            //testataan kaverin hakua
            Console.WriteLine("Anna kaverinumero:");
            string retval = Console.ReadLine();
            int i = 0;
            if (int.TryParse(retval, out i))
            {
                //huom Get-metodi palauttaa null jos indeksin osoittamaa kaveria ei löydy
                Person searchedFriend = myFriends.Get(int.Parse(retval));
                if (searchedFriend != null)
                {
                    Console.WriteLine(string.Format("Löytyi ystävä nimeltä {0}", searchedFriend.ToString()));
                }
                else
                {
                    Console.WriteLine("Annetulla numerolla ei löydy kaveria.");
                }
            }

            //testataan kaverin hakua HETUlla
            Console.WriteLine("Anna kaverisi HETU");
            retval = Console.ReadLine();
            Person sp = myFriends.Find(retval);
            if (sp != null)
                Console.WriteLine(string.Format("Löytyi:{0}", sp.ToString()));
            else
                Console.WriteLine(string.Format("Annetulla {0} HETUlla ei löydy kavereita", retval));
        }
        static void Main(string[] args)
        {
            TestPersonClass();
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace demov2
{
    class Person
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string SocialSecurityNumber { get; set; }
        //methods

        public override string ToString()
        {
            return FirstName + " " + LastName + " " + SocialSecurityNumber;
        }
    }
class Persons
    {
        //member=jäsenmuuttujat
        private List<Person> persons;
        //constructors
        public Persons()
        {
            persons = new List<Person>();
        }
        //methods
        public void Add(Person person)
        {
            persons.Add(person);
        }
        public Person Get(int index)
        {
            if (index < persons.Count)
            {
                return persons.ElementAt(index);
            }
            else
                return null;
        }
        public Person Find(string socialsecuritynumber)
        {
            foreach (Person p in persons)
            {
                if (p.SocialSecurityNumber.Equals(socialsecuritynumber))
                {
                    return p;
                }
            }
            return null;
        }
        public void ShowPersons()
        {
            foreach (Person p in persons)
            {
                Console.WriteLine(p.ToString());
            }
        }
    }
}
